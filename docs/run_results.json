{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.2", "generated_at": "2024-07-18T10:50:17.241098Z", "invocation_id": "40657dcf-0bd9-4775-ace9-ce46d1742222", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-18T10:50:14.790731Z", "completed_at": "2024-07-18T10:50:14.803731Z"}, {"name": "execute", "started_at": "2024-07-18T10:50:14.804732Z", "completed_at": "2024-07-18T10:50:14.805734Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018001079559326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sql_dynamic_rename.rename_sample_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-18T10:50:14.813899Z", "completed_at": "2024-07-18T10:50:14.822230Z"}, {"name": "execute", "started_at": "2024-07-18T10:50:14.824370Z", "completed_at": "2024-07-18T10:50:14.824370Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01349186897277832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sql_dynamic_rename.stg_seed_sample_data", "compiled": true, "compiled_code": "-- read in the seed data (rememnber to dbt seed the source data in if you want to walk through the included example.)\n\nwith source as (\n\n    select \n\n        *\n\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.rename_sample_data\n\n),\n\n-- add a source row number as this is important in lots of cases for using a sql query to create a mapping table for the headers.\n\ntransformed as (\n\n select \n\n        *,\n        row_number() over (order by null) as row_num\n\nfrom source\n\n)\n\nselect * from transformed", "relation_name": "TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.stg_seed_sample_data"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-18T10:50:14.840342Z", "completed_at": "2024-07-18T10:50:14.872601Z"}, {"name": "execute", "started_at": "2024-07-18T10:50:14.874601Z", "completed_at": "2024-07-18T10:50:14.874601Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04435014724731445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sql_dynamic_rename.int_seed_data_only_table", "compiled": true, "compiled_code": "-- take the staged data and in this example skip the first row so that we have a table with the original column names and the first row is now the first row that data actually starts.\n\nwith source as (\n\n    select * from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.stg_seed_sample_data\n\n),\n\n-- skip the nested header row\ntransformed as (\n\n    select\n\n        *\n\n    from source\n    where row_num > 1\n\n)\n\nselect * from transformed", "relation_name": "TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.int_seed_data_only_table"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-18T10:50:14.847346Z", "completed_at": "2024-07-18T10:50:15.573969Z"}, {"name": "execute", "started_at": "2024-07-18T10:50:15.575873Z", "completed_at": "2024-07-18T10:50:15.575873Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.812786340713501, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sql_dynamic_rename.int_seed_header_mapping", "compiled": true, "compiled_code": "-- This is an example query for returning a mapping table for renaming columns and addressing the nested header issue.\n\n-- unpivot the staged model to get header name in the rows In this instance the excluded columns are not pivotted and .\n\nwith unpivot as (\n\n    select\n        employee,\n        row_num,\n\n      cast('OBSERVATION_START_TIME' as TEXT) as header,\n      cast(  \n           OBSERVATION_START_TIME\n             \n           as varchar) as subheader\n\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.stg_seed_sample_data\n\n    union all\n    select\n        employee,\n        row_num,\n\n      cast('OBSERVATION_INTERVAL' as TEXT) as header,\n      cast(  \n           OBSERVATION_INTERVAL\n             \n           as varchar) as subheader\n\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.stg_seed_sample_data\n\n    union all\n    select\n        employee,\n        row_num,\n\n      cast('OBSERVATION_LENGTH_MINS' as TEXT) as header,\n      cast(  \n           OBSERVATION_LENGTH_MINS\n             \n           as varchar) as subheader\n\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.stg_seed_sample_data\n\n    union all\n    select\n        employee,\n        row_num,\n\n      cast('INTERACTION_WITH' as TEXT) as header,\n      cast(  \n           INTERACTION_WITH\n             \n           as varchar) as subheader\n\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.stg_seed_sample_data\n\n    union all\n    select\n        employee,\n        row_num,\n\n      cast('F' as TEXT) as header,\n      cast(  \n           F\n             \n           as varchar) as subheader\n\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.stg_seed_sample_data\n\n    union all\n    select\n        employee,\n        row_num,\n\n      cast('G' as TEXT) as header,\n      cast(  \n           G\n             \n           as varchar) as subheader\n\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.stg_seed_sample_data\n\n    union all\n    select\n        employee,\n        row_num,\n\n      cast('H' as TEXT) as header,\n      cast(  \n           H\n             \n           as varchar) as subheader\n\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.stg_seed_sample_data\n\n    union all\n    select\n        employee,\n        row_num,\n\n      cast('TASK_ENGAGEMENT' as TEXT) as header,\n      cast(  \n           TASK_ENGAGEMENT\n             \n           as varchar) as subheader\n\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.stg_seed_sample_data\n\n    union all\n    select\n        employee,\n        row_num,\n\n      cast('J' as TEXT) as header,\n      cast(  \n           J\n             \n           as varchar) as subheader\n\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.stg_seed_sample_data\n\n    union all\n    select\n        employee,\n        row_num,\n\n      cast('MANAGER_PROXIMITY' as TEXT) as header,\n      cast(  \n           MANAGER_PROXIMITY\n             \n           as varchar) as subheader\n\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.stg_seed_sample_data\n\n    union all\n    select\n        employee,\n        row_num,\n\n      cast('L' as TEXT) as header,\n      cast(  \n           L\n             \n           as varchar) as subheader\n\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.stg_seed_sample_data\n\n    union all\n    select\n        employee,\n        row_num,\n\n      cast('M' as TEXT) as header,\n      cast(  \n           M\n             \n           as varchar) as subheader\n\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.stg_seed_sample_data\n\n    union all\n    select\n        employee,\n        row_num,\n\n      cast('N' as TEXT) as header,\n      cast(  \n           N\n             \n           as varchar) as subheader\n\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.stg_seed_sample_data\n\n    \n    \n),\n\n-- only take row 1\noriginal_headers as(\n\n    select\n\n        row_number() over (order by null) as col_num,\n        header,      \n    \n    from unpivot\n    \n    where row_num = 1\n\n),\n\n-- Prep the headers that need to be renamed, in this case they are all length(1) so are changed to null so their info can be copied down and concatenated with the nested header value.\nheaders as (\n\n    select\n\n        row_num as rn,\n        case \n            when length(header) = 1 then null\n            else header\n        end as header,\n        subheader\n    \n    from unpivot\n    \n    where row_num = 1\n\n),\n\n-- copy down header value using last_value\nnew_headers as (\n    select\n\n        \n        row_number() over (order by null) as col_num,\n        case\n            when subheader is null then header \n            else coalesce(header, last_value(header) ignore nulls over (order by rn rows between unbounded preceding and current row)) || '_' || coalesce(subheader, '') \n        end as new_header,\n\n\n    from headers \n\n),\n\n-- sql databases do not like special characters in the table name so replace these with '_'\n\nrename_table as (\n\n    select\n\n        upper(regexp_replace(h.new_header, '[^A-Za-z0-9_]', '_')) as new_header,\n\n        original_headers.header\n\n    from new_headers h\n    inner join original_headers on h.col_num = original_headers.col_num\n\n)\n\n-- end result is a row for every column and THE ORDER IS IMPORTANT, we have new_header followed by original header.\n\nselect * from rename_table", "relation_name": "TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.int_seed_header_mapping"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-18T10:50:15.653108Z", "completed_at": "2024-07-18T10:50:17.160029Z"}, {"name": "execute", "started_at": "2024-07-18T10:50:17.162032Z", "completed_at": "2024-07-18T10:50:17.162032Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.5830464363098145, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sql_dynamic_rename.int_seed__execute_rename", "compiled": true, "compiled_code": "-- as the rename macro has references back to models, we might have problems with unclear references.\n-- this can be avoided two ways, in this version, within the model itself before calling the macro we have added CTEs that refer to the two proceeding models that are needed in the macro. This ensures that this model and the macro within execute after the first two models (otherwise the macro within this model will try and execute before the models are created)\n\n-- the other approach is to tell dbt with a comment statement at the start of the model that specifies dependencies. Like so\n-- depends_on: TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.int_seed_data_only_table\n\nwith data as (\n\n    select * from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.int_seed_data_only_table\n\n),\n\nheader_mapping as (\n\n    select * from TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.int_seed_header_mapping\n\n),\n\n-- the macro returns a list of column_name1 as new_column_name1, column_name2 as new_column_name2 etc. that are then wrapped in the model with a select and a from for the data that is to be renamed. \n\nrenamed_table as (\n        \n        select\n\n            EMPLOYEE,\nOBSERVATION_START_TIME as OBSERVATION_START_TIME,\nOBSERVATION_INTERVAL as OBSERVATION_INTERVAL,\nOBSERVATION_LENGTH_MINS as OBSERVATION_LENGTH_MINS,\nINTERACTION_WITH as INTERACTION_WITH_MANAGER,\nF as INTERACTION_WITH_COWORKER,\nG as INTERACTION_WITH_CUSTOMER,\nH as INTERACTION_WITH_NO_ONE,\nTASK_ENGAGEMENT as TASK_ENGAGEMENT_ON_TASK,\nJ as TASK_ENGAGEMENT_OFF_TASK,\nMANAGER_PROXIMITY as MANAGER_PROXIMITY_NEXT_TO___2M_,\nL as MANAGER_PROXIMITY_CLOSE_TO___5M_,\nM as MANAGER_PROXIMITY_FURTHER__5M_,\nN as MANAGER_PROXIMITY_NA,\nROW_NUM\n\n        from data\n\n)\n\nselect * from renamed_table", "relation_name": "TIL_PORTFOLIO_PROJECTS.EH_SQL_DYNAMIC_RENAME.int_seed__execute_rename"}], "elapsed_time": 4.406105279922485, "args": {"print": true, "version_check": true, "enable_legacy_logger": false, "macro_debugging": false, "populate_cache": true, "show_resource_report": false, "profiles_dir": "C:\\Users\\EdwardHayter\\.dbt", "select": [], "send_anonymous_usage_stats": true, "log_level_file": "debug", "cache_selected_only": false, "defer": false, "require_resource_names_without_spaces": false, "partial_parse": true, "log_path": "C:\\Users\\EdwardHayter\\Documents\\Virtual_Environments\\sql_dynamic_rename\\logs", "write_json": true, "static": false, "invocation_command": "dbt docs generate", "require_explicit_package_overrides_for_builtin_materializations": true, "warn_error_options": {"include": [], "exclude": []}, "strict_mode": false, "printer_width": 80, "which": "generate", "use_colors": true, "log_format_file": "debug", "empty_catalog": false, "exclude": [], "partial_parse_file_diff": true, "use_colors_file": true, "static_parser": true, "vars": {}, "favor_state": false, "source_freshness_run_project_hooks": false, "project_dir": "C:\\Users\\EdwardHayter\\Documents\\Virtual_Environments\\sql_dynamic_rename", "log_file_max_bytes": 10485760, "compile": true, "log_level": "info", "log_format": "default", "quiet": false, "introspect": true, "indirect_selection": "eager"}}